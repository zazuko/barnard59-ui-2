{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@zazuko/rdf-vocabularies/ontologies lazy ^\\.\\/.*\\.nq$ strict namespace object","webpack:///./src/App.vue?f454","webpack:///./src/components/BlocklyComponent.vue?fd17","webpack:///src/components/BlocklyComponent.vue","webpack:///./src/components/BlocklyComponent.vue?aa92","webpack:///./src/components/BlocklyComponent.vue","webpack:///./src/blocks/b59.js","webpack:///./src/blocks/lists.js","webpack:///./src/renderer.js","webpack:///./src/utils/generator.js","webpack:///./src/utils/utils.js","webpack:///./src/blocks/dynamic-blocks.js","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","map","webpackAsyncContext","req","then","code","ids","id","keys","_vm","this","_h","$createElement","_c","_self","attrs","options","ref","_e","on","$event","showCode","_v","toXML","directives","rawName","codeType","expression","fromXML","parseTurtle","$$selectedVal","Array","filter","selected","val","_value","selectedPipeline","multiple","_l","pipeline","_s","domProps","composing","staticRenderFns","staticClass","staticStyle","_t","props","workspace","mounted","toolbox","$refs","component","isDynamicBlock","block","_dynamicBlock","typeCheckDynamicBlocks","a","b","aPipe","_pipeTypes","bPipe","includes","Blockly","doTypeChecks","isSuperior","sourceBlock_","dynamicA","getDescendants","lastFromPipelineA","firstFromPipelineB","getChildren","checkArrayOne","getCheck","checkArrayTwo","init","appendDummyInput","appendField","appendValueInput","setCheck","appendStatementInput","setColour","setTooltip","setHelpUrl","setPreviousStatement","setNextStatement","setInputsInline","setOutput","variables_get_dynamic","variables_set_dynamic","plists_create_with","LISTS_CREATE_WITH_HELPURL","setStyle","itemCount_","updateShape_","setMutator","LISTS_CREATE_WITH_TOOLTIP","mutationToDom","container","xml","domToMutation","xmlElement","parseInt","getAttribute","decompose","containerBlock","newBlock","initSvg","connection","getInput","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","isInsertionMarker","valueConnection_","targetBlock","targetConnection","disconnect","reconnect","saveConnections","input","removeInput","LISTS_CREATE_EMPTY_TITLE","setAlign","LISTS_CREATE_WITH_INPUT_WITH","onchange","allInputsFilled","notch","params","assign","width","height","peak","pathLeft","pathRight","notches","NONE","NORMAL","OBJECT","puzzles","LIST","puzzle","half","pathDown","pathUp","inputPuzzleFor","outputPuzzleFor","inputNotchFor","outputNotchFor","CustomConstantsProvider","isPipeline","isGeneric","isDynamic","pipelineNotchOverStep","check_","children","childBlocks_","lastChild","NOTCH","lastDynamicBlock","ConstantProvider","CustomRenderer","Renderer","register","prefix","schema","rdf","entries","reduce","acc","iri","namespace","forEach","prefixes","ORDER_ATOMIC","ORDER_FIRST_PASS","ORDER_SECOND_PASS","ORDER_NONE","RESERVED_WORDS_","cf","clownface","dataset","variableDB_","reset","setVariableMap","getVariableMap","defvars_","allUsedVarModels","finish","turtle","toString","replace","pipelineIRI","getFieldValue","variablesPointer","blankNode","namedNode","addOut","Pipeline","Readable","variables","steps","statementToCode","valueToCode","test","variable","variableMap_","find","id_","var1","Variable","definedVariable","nextBlock","blockToCode","parser","formats","parsers","findBase","str","match","turtleToCF","stream","stringToStream","quadStream","import","graph","base","parsedPipeline","hasBase","turtleToXML","rdfFetch","url","fetch","res","catch","urlToCF","baseQuad","has","term","out","doc","ele","rootVarXML","lastVariableSetBlock","definedVariableNames","Set","pipelines","pXML","txt","up","vXML","items","index","add","variableType","variabletype","from","stepList","list","sXML","step","lastIndex","implementedBy","codeLink","link","args","arguments","toArray","dynamicBlockType","Blocks","stepName","argsContent","arg","termType","terms","datatype","equals","VariableName","field","EcmaScript","EcmaScriptTemplateLiteral","Boolean","argsList","manifestsFiles","rdfs","file","manifests","lib","split","join","Operation","operation","label","blockName","comment","isReadable","values","isWritable","Writable","isReadableObjectMode","ReadableObjectMode","isWritableObjectMode","WritableObjectMode","previousStatement","nextStatement","stepTemplate","Step","addList","literal","button","xmlList","concat","blockList","components","BlocklyComponent","hiddenPipelines","media","grid","renderer","watch","oldVal","methods","Vue","config","productionTip","ignoredElements","render","h","App","$mount"],"mappings":"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","file":"js/app.1b22bba9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0a2de4\":\"a550ede7\",\"chunk-2d0a34d7\":\"1840f73f\",\"chunk-2d0a3ec7\":\"408b246a\",\"chunk-2d0a4f20\":\"84751c21\",\"chunk-2d0ab079\":\"1b8c782e\",\"chunk-2d0ab0ec\":\"9f3e2b15\",\"chunk-2d0abe66\":\"87007540\",\"chunk-2d0ac9b1\":\"3a979747\",\"chunk-2d0b1e51\":\"0542bf96\",\"chunk-2d0b297a\":\"359ecb60\",\"chunk-2d0b3114\":\"34fb21da\",\"chunk-2d0b6189\":\"2defd936\",\"chunk-2d0b672b\":\"3e569ebf\",\"chunk-2d0b9801\":\"da3f69b2\",\"chunk-2d0bd1f9\":\"b3262dee\",\"chunk-2d0bd794\":\"bd294345\",\"chunk-2d0bdf7a\":\"bfbdfd65\",\"chunk-2d0c18e1\":\"21897e3d\",\"chunk-2d0c1da5\":\"7a41b8e1\",\"chunk-2d0c73b0\":\"4e5ac701\",\"chunk-2d0c8254\":\"d5c5f7a6\",\"chunk-2d0ccf4c\":\"d7a978c6\",\"chunk-2d0d07c9\":\"77937772\",\"chunk-2d0d3e22\":\"98475db2\",\"chunk-2d0d6908\":\"ed8b969b\",\"chunk-2d0dd0ed\":\"985b0674\",\"chunk-2d0dd68c\":\"65448d4a\",\"chunk-2d0de920\":\"a91adaa2\",\"chunk-2d0df2b6\":\"aba3b366\",\"chunk-2d0e1bb3\":\"9770034d\",\"chunk-2d0e525f\":\"57a3fd61\",\"chunk-2d0e6101\":\"2586f667\",\"chunk-2d0e885f\":\"4a40a49b\",\"chunk-2d0e889b\":\"c2318434\",\"chunk-2d0e8c2e\":\"17155553\",\"chunk-2d0f026e\":\"cbe8dd64\",\"chunk-2d0f0c10\":\"258654b5\",\"chunk-2d0f0de1\":\"35f13356\",\"chunk-2d20ef76\":\"9c256b02\",\"chunk-2d20efc7\":\"e466281a\",\"chunk-2d20f785\":\"ee2e79cf\",\"chunk-2d210a2f\":\"fea5d5ca\",\"chunk-2d213de1\":\"77cb7825\",\"chunk-2d2163c8\":\"9870e856\",\"chunk-2d2163d4\":\"746bcbfb\",\"chunk-2d21787e\":\"a7d10672\",\"chunk-2d217929\":\"54a9eb2d\",\"chunk-2d217a6d\":\"a92722c1\",\"chunk-2d21a586\":\"e17cbde2\",\"chunk-2d21a979\":\"e23dc808\",\"chunk-2d21ac05\":\"0a5cc583\",\"chunk-2d21e406\":\"651a36c9\",\"chunk-2d21eb2d\":\"90f9a71d\",\"chunk-2d222045\":\"18ca4000\",\"chunk-2d225a64\":\"736cad76\",\"chunk-2d2297bb\":\"36034184\",\"chunk-2d229d99\":\"667eb177\",\"chunk-2d22c0ff\":\"dc9676ed\",\"chunk-2d22cc29\":\"96530133\",\"chunk-2d22daca\":\"3a3d64c2\",\"chunk-2d230dc8\":\"830f4e93\",\"chunk-2d230e07\":\"cd4aee4d\",\"chunk-2d238115\":\"c4754b6b\",\"chunk-2d238407\":\"5fc12c23\",\"chunk-7727fe41\":\"49f2f9bb\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./_index.nq\": [\n\t\t\"8a44\",\n\t\t\"chunk-2d0e885f\"\n\t],\n\t\"./as.nq\": [\n\t\t\"80ec\",\n\t\t\"chunk-2d0dd68c\"\n\t],\n\t\"./cc.nq\": [\n\t\t\"9ac3\",\n\t\t\"chunk-2d0f026e\"\n\t],\n\t\"./cnt.nq\": [\n\t\t\"bd9f\",\n\t\t\"chunk-2d21ac05\"\n\t],\n\t\"./csvw.nq\": [\n\t\t\"1c67\",\n\t\t\"chunk-2d0b6189\"\n\t],\n\t\"./dash.nq\": [\n\t\t\"e4fe\",\n\t\t\"chunk-2d225a64\"\n\t],\n\t\"./dbo.nq\": [\n\t\t\"b485\",\n\t\t\"chunk-2d20f785\"\n\t],\n\t\"./dc11.nq\": [\n\t\t\"d587\",\n\t\t\"chunk-2d21e406\"\n\t],\n\t\"./dcat.nq\": [\n\t\t\"0232\",\n\t\t\"chunk-2d0a34d7\"\n\t],\n\t\"./dcterms.nq\": [\n\t\t\"92f6\",\n\t\t\"chunk-2d0e525f\"\n\t],\n\t\"./doap.nq\": [\n\t\t\"2294\",\n\t\t\"chunk-2d0b1e51\"\n\t],\n\t\"./dqv.nq\": [\n\t\t\"ff1b\",\n\t\t\"chunk-2d238407\"\n\t],\n\t\"./dtype.nq\": [\n\t\t\"f901\",\n\t\t\"chunk-2d22daca\"\n\t],\n\t\"./duv.nq\": [\n\t\t\"e2ccd\",\n\t\t\"chunk-7727fe41\"\n\t],\n\t\"./earl.nq\": [\n\t\t\"b22b\",\n\t\t\"chunk-2d20ef76\"\n\t],\n\t\"./foaf.nq\": [\n\t\t\"143f\",\n\t\t\"chunk-2d0ab0ec\"\n\t],\n\t\"./frbr.nq\": [\n\t\t\"2df8\",\n\t\t\"chunk-2d0bdf7a\"\n\t],\n\t\"./geo.nq\": [\n\t\t\"72a8\",\n\t\t\"chunk-2d0d6908\"\n\t],\n\t\"./geof.nq\": [\n\t\t\"0934\",\n\t\t\"chunk-2d0a4f20\"\n\t],\n\t\"./geor.nq\": [\n\t\t\"1411\",\n\t\t\"chunk-2d0ab079\"\n\t],\n\t\"./gn.nq\": [\n\t\t\"67d6\",\n\t\t\"chunk-2d0d07c9\"\n\t],\n\t\"./gr.nq\": [\n\t\t\"85e2\",\n\t\t\"chunk-2d0de920\"\n\t],\n\t\"./grddl.nq\": [\n\t\t\"2bc1\",\n\t\t\"chunk-2d0bd794\"\n\t],\n\t\"./gtfs.nq\": [\n\t\t\"8087\",\n\t\t\"chunk-2d0dd0ed\"\n\t],\n\t\"./http.nq\": [\n\t\t\"b979\",\n\t\t\"chunk-2d210a2f\"\n\t],\n\t\"./hydra.nq\": [\n\t\t\"c6ff\",\n\t\t\"chunk-2d217929\"\n\t],\n\t\"./ical.nq\": [\n\t\t\"dece\",\n\t\t\"chunk-2d229d99\"\n\t],\n\t\"./ldp.nq\": [\n\t\t\"19f9\",\n\t\t\"chunk-2d0ac9b1\"\n\t],\n\t\"./lvont.nq\": [\n\t\t\"4fae\",\n\t\t\"chunk-2d0ccf4c\"\n\t],\n\t\"./ma.nq\": [\n\t\t\"488c\",\n\t\t\"chunk-2d0c1da5\"\n\t],\n\t\"./oa.nq\": [\n\t\t\"bab3\",\n\t\t\"chunk-2d21a586\"\n\t],\n\t\"./og.nq\": [\n\t\t\"8987\",\n\t\t\"chunk-2d0df2b6\"\n\t],\n\t\"./org.nq\": [\n\t\t\"9dcc\",\n\t\t\"chunk-2d0f0de1\"\n\t],\n\t\"./owl.nq\": [\n\t\t\"de48\",\n\t\t\"chunk-2d2297bb\"\n\t],\n\t\"./prov.nq\": [\n\t\t\"c6b7\",\n\t\t\"chunk-2d21787e\"\n\t],\n\t\"./qb.nq\": [\n\t\t\"006d\",\n\t\t\"chunk-2d0a2de4\"\n\t],\n\t\"./qudt.nq\": [\n\t\t\"5443\",\n\t\t\"chunk-2d0c8254\"\n\t],\n\t\"./qudtv.nq\": [\n\t\t\"cd8f\",\n\t\t\"chunk-2d222045\"\n\t],\n\t\"./rdau.nq\": [\n\t\t\"d759\",\n\t\t\"chunk-2d21eb2d\"\n\t],\n\t\"./rdf.nq\": [\n\t\t\"c846\",\n\t\t\"chunk-2d217a6d\"\n\t],\n\t\"./rdfa.nq\": [\n\t\t\"7c4e\",\n\t\t\"chunk-2d0e1bb3\"\n\t],\n\t\"./rdfs.nq\": [\n\t\t\"b267\",\n\t\t\"chunk-2d20efc7\"\n\t],\n\t\"./rr.nq\": [\n\t\t\"96c1\",\n\t\t\"chunk-2d0e6101\"\n\t],\n\t\"./rss.nq\": [\n\t\t\"af06\",\n\t\t\"chunk-2d213de1\"\n\t],\n\t\"./schema.nq\": [\n\t\t\"8b3a\",\n\t\t\"chunk-2d0e8c2e\"\n\t],\n\t\"./sd.nq\": [\n\t\t\"eda4\",\n\t\t\"chunk-2d230dc8\"\n\t],\n\t\"./sdmx.nq\": [\n\t\t\"c236\",\n\t\t\"chunk-2d2163c8\"\n\t],\n\t\"./sem.nq\": [\n\t\t\"fe99\",\n\t\t\"chunk-2d238115\"\n\t],\n\t\"./sh.nq\": [\n\t\t\"2792\",\n\t\t\"chunk-2d0b3114\"\n\t],\n\t\"./sioc.nq\": [\n\t\t\"4719\",\n\t\t\"chunk-2d0c18e1\"\n\t],\n\t\"./skos.nq\": [\n\t\t\"9e5c\",\n\t\t\"chunk-2d0f0c10\"\n\t],\n\t\"./skosxl.nq\": [\n\t\t\"16f1\",\n\t\t\"chunk-2d0abe66\"\n\t],\n\t\"./sosa.nq\": [\n\t\t\"2b3f\",\n\t\t\"chunk-2d0bd1f9\"\n\t],\n\t\"./ssn.nq\": [\n\t\t\"5f50\",\n\t\t\"chunk-2d0d3e22\"\n\t],\n\t\"./test.nq\": [\n\t\t\"f241\",\n\t\t\"chunk-2d22c0ff\"\n\t],\n\t\"./time.nq\": [\n\t\t\"c22a\",\n\t\t\"chunk-2d2163d4\"\n\t],\n\t\"./vaem.nq\": [\n\t\t\"1ccf\",\n\t\t\"chunk-2d0b672b\"\n\t],\n\t\"./vann.nq\": [\n\t\t\"f537\",\n\t\t\"chunk-2d22cc29\"\n\t],\n\t\"./vcard.nq\": [\n\t\t\"5076\",\n\t\t\"chunk-2d0c73b0\"\n\t],\n\t\"./void.nq\": [\n\t\t\"2589\",\n\t\t\"chunk-2d0b297a\"\n\t],\n\t\"./vs.nq\": [\n\t\t\"32e1\",\n\t\t\"chunk-2d0b9801\"\n\t],\n\t\"./wgs.nq\": [\n\t\t\"edc5\",\n\t\t\"chunk-2d230e07\"\n\t],\n\t\"./xhv.nq\": [\n\t\t\"03f4\",\n\t\t\"chunk-2d0a3ec7\"\n\t],\n\t\"./xkos.nq\": [\n\t\t\"bbbe\",\n\t\t\"chunk-2d21a979\"\n\t],\n\t\"./xsd.nq\": [\n\t\t\"8a62\",\n\t\t\"chunk-2d0e889b\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2111\";\nmodule.exports = webpackAsyncContext;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(_vm.options.toolbox)?_c('blockly-component',{ref:\"main\",attrs:{\"id\":\"blockly-workspace\",\"options\":_vm.options}}):_vm._e(),_c('div',{attrs:{\"id\":\"code\"}},[_c('div',{attrs:{\"id\":\"buttons\"}},[_c('button',{on:{\"click\":function($event){return _vm.showCode()}}},[_vm._v(\"Blocks → Turtle\")]),_c('button',{on:{\"click\":function($event){return _vm.toXML()}}},[_vm._v(\"Blocks → XML\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.codeType === 'xml'),expression:\"codeType === 'xml'\"}],on:{\"click\":function($event){return _vm.fromXML()}}},[_vm._v(\"XML → Blocks\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.codeType === 'ttl'),expression:\"codeType === 'ttl'\"}],on:{\"click\":function($event){return _vm.parseTurtle()}}},[_vm._v(\"Turtle → Blocks\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedPipeline),expression:\"selectedPipeline\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedPipeline=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"All pipelines\")]),_vm._l((_vm.pipelines),function(pipeline){return _c('option',{key:pipeline},[_vm._v(\" \"+_vm._s(pipeline)+\" \")])})],2),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectedPipeline),expression:\"selectedPipeline\"}]},[_vm._v(\"Showing only: \"+_vm._s(_vm.selectedPipeline))])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.code),expression:\"code\"}],domProps:{\"value\":(_vm.code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.code=$event.target.value}}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"workspace-container\",staticClass:\"workspace-container\"}),_c('xml',{ref:\"workspace-toolbox\",staticStyle:{\"display\":\"none\"}},[_vm._t(\"default\")],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"workspace-container\" ref=\"workspace-container\">\n    </div>\n    <xml ref=\"workspace-toolbox\" style=\"display:none\">\n      <slot></slot>\n    </xml>\n  </div>\n</template>\n\n<script>\nimport Blockly from 'blockly'\n\nexport default {\n  name: 'BlocklyComponent',\n  props: ['options'],\n  data () {\n    return {\n      workspace: null\n    }\n  },\n  mounted () {\n    const options = this.$props.options || {}\n    if (!options.toolbox) {\n      options.toolbox = this.$refs['workspace-toolbox']\n    }\n    this.workspace = Blockly.inject(this.$refs['workspace-container'], options)\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlocklyComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlocklyComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BlocklyComponent.vue?vue&type=template&id=a3f8befe&\"\nimport script from \"./BlocklyComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./BlocklyComponent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import * as Blockly from 'blockly/core'\n\nfunction isDynamicBlock (block) {\n  return !!block?._dynamicBlock\n}\n\nconst typeCheckDynamicBlocks = (a, b) => {\n  if (!a._dynamicBlock) return false\n  if (!b._dynamicBlock) return false\n\n  const aPipe = a._pipeTypes\n  const bPipe = b._pipeTypes\n  if (aPipe.includes('p:Readable') && bPipe.includes('p:Writable')) {\n    return true\n  }\n  if (aPipe.includes('p:ReadableObjectMode') && bPipe.includes('p:WritableObjectMode')) {\n    return true\n  }\n\n  return false\n}\n\nBlockly.ConnectionChecker.prototype.doTypeChecks = function (a, b) {\n  if (!a.isSuperior()) {\n    [b, a] = [a, b]\n  }\n\n  // connecting pipelines needs custom logic because their \"type\"\n  // is based on their first and last step\n  if (a.sourceBlock_.type === 'p:Pipeline' && b.sourceBlock_.type === 'p:Pipeline') {\n    const dynamicA = a.sourceBlock_.getDescendants(true).filter(isDynamicBlock)\n    if (dynamicA.length) {\n      const lastFromPipelineA = dynamicA[dynamicA.length - 1]\n      const firstFromPipelineB = b.sourceBlock_.getChildren(true).map(({ id, _dynamicBlock, _pipeTypes }) => ({ id, _dynamicBlock, _pipeTypes }))[0]\n\n      if (firstFromPipelineB) {\n        if (lastFromPipelineA.id === firstFromPipelineB.id) {\n          return false\n        }\n\n        return typeCheckDynamicBlocks(lastFromPipelineA, firstFromPipelineB)\n      }\n      return true\n    }\n  }\n\n  const checkArrayOne = a.getCheck()\n  const checkArrayTwo = b.getCheck()\n\n  if (!checkArrayOne || !checkArrayTwo) {\n    // One or both sides are promiscuous enough that anything will fit.\n    return true\n  }\n  // Find any intersection in the check lists.\n  for (let i = 0; i < checkArrayOne.length; i++) {\n    if (checkArrayTwo.includes(checkArrayOne[i])) {\n      return true\n    }\n  }\n\n  if (isDynamicBlock(a.sourceBlock_) && isDynamicBlock(b.sourceBlock_)) {\n    return typeCheckDynamicBlocks(a.sourceBlock_, b.sourceBlock_)\n  }\n  return false\n}\n\nBlockly.Blocks['p:Pipeline'] = {\n  init () {\n    this.appendDummyInput()\n      .appendField('Pipeline')\n      .appendField(new Blockly.FieldTextInput('Name'), 'NAME')\n    this.appendDummyInput()\n    this.appendValueInput('VARIABLES')\n      .setCheck(['Array'])\n      .appendField('variables')\n    this.appendStatementInput('STEPLIST')\n      .appendField('steps')\n    this.setColour(230)\n    this.setTooltip('hey')\n    this.setHelpUrl('https://example.com')\n    this.setPreviousStatement(true, ['p:Pipeline'])\n    this.setNextStatement(true, ['p:Pipeline'])\n  }\n}\n\nBlockly.Blocks['code:EcmaScript'] = {\n  init () {\n    this.appendDummyInput()\n      .appendField('Code')\n      .appendField(new Blockly.FieldTextInput('Code'), 'ECMASCRIPTCODE')\n    this.setInputsInline(true)\n    this.setOutput(true, ['code:EcmaScript'])\n  }\n}\n\nBlockly.Blocks['code:EcmaScriptTemplateLiteral'] = {\n  init () {\n    this.appendDummyInput()\n      .appendField('Template Literal')\n      .appendField(new Blockly.FieldTextInput('Code'), 'ECMASCRIPTCODE')\n    this.setInputsInline(true)\n    this.setOutput(true, ['code:EcmaScriptTemplateLiteral'])\n  }\n}\n\n// Block for variable getter.\nBlockly.Blocks.variables_get_dynamic = {\n  init () {\n    this.setColour(150)\n    this.appendDummyInput()\n      .appendField(new Blockly.FieldVariable('VAR_NAME', null, ['p:Variable'], 'p:Variable'), 'VAR')\n    this.setOutput(true, ['p:Variable'])\n  }\n}\n\n// Block for variable setter.\nBlockly.Blocks.variables_set_dynamic = {\n  init () {\n    this.setColour(150)\n    this.appendDummyInput('Variable')\n      .appendField('Variable')\n    this.appendDummyInput()\n      .appendField('Name')\n      .appendField(new Blockly.FieldVariable('VAR_NAME', null, ['p:Variable'], 'p:Variable'), 'VAR')\n    this.appendDummyInput()\n      .appendField('Value')\n      .appendField(new Blockly.FieldTextInput('Value'), 'VALUE')\n    this.setPreviousStatement(true, ['p:Variable'])\n    this.setNextStatement(true, ['p:Variable'])\n    this.data = 'variable IRI'\n  }\n}\n","import * as Blockly from 'blockly/core'\n\nBlockly.Blocks.plists_create_with = {\n  init () {\n    this.setHelpUrl(Blockly.Msg.LISTS_CREATE_WITH_HELPURL)\n    this.setStyle('list_blocks')\n    this.itemCount_ = 1\n    this.updateShape_()\n    this.setOutput(true, 'Array')\n    this.setMutator(new Blockly.Mutator(['lists_create_with_item']))\n    this.setTooltip(Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP)\n  },\n  /**\n   * Create XML to represent list inputs.\n   * @return {!Element} XML storage element.\n   * @this {Blockly.Block}\n   */\n  mutationToDom () {\n    const container = Blockly.utils.xml.createElement('mutation')\n    container.setAttribute('items', this.itemCount_)\n    return container\n  },\n  /**\n   * Parse XML to restore the list inputs.\n   * @param {!Element} xmlElement XML storage element.\n   * @this {Blockly.Block}\n   */\n  domToMutation (xmlElement) {\n    this.itemCount_ = parseInt(xmlElement.getAttribute('items'), 10)\n    this.updateShape_()\n  },\n  /**\n   * Populate the mutator's dialog with this block's components.\n   * @param {!Blockly.Workspace} workspace Mutator's workspace.\n   * @return {!Blockly.Block} Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  decompose (workspace) {\n    const containerBlock = workspace.newBlock('lists_create_with_container')\n    containerBlock.initSvg()\n    let connection = containerBlock.getInput('STACK').connection\n    for (let i = 0; i < this.itemCount_; i++) {\n      const itemBlock = workspace.newBlock('lists_create_with_item')\n      itemBlock.initSvg()\n      connection.connect(itemBlock.previousConnection)\n      connection = itemBlock.nextConnection\n    }\n    return containerBlock\n  },\n  /**\n   * Reconfigure this block based on the mutator dialog's components.\n   * @param {!Blockly.Block} containerBlock Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  compose (containerBlock) {\n    let itemBlock = containerBlock.getInputTargetBlock('STACK')\n    // Count number of inputs.\n    const connections = []\n    while (itemBlock && !itemBlock.isInsertionMarker()) {\n      connections.push(itemBlock.valueConnection_)\n      itemBlock = itemBlock.nextConnection &&\n          itemBlock.nextConnection.targetBlock()\n    }\n    // Disconnect any children that don't belong.\n    for (let i = 0; i < this.itemCount_; i++) {\n      const connection = this.getInput('ADD' + i).connection.targetConnection\n      if (connection && !connections.includes(connection)) {\n        connection.disconnect()\n      }\n    }\n    this.itemCount_ = connections.length\n    this.updateShape_()\n    // Reconnect any child blocks.\n    for (let i = 0; i < this.itemCount_; i++) {\n      Blockly.Mutator.reconnect(connections[i], this, 'ADD' + i)\n    }\n  },\n  /**\n   * Store pointers to any connected child blocks.\n   * @param {!Blockly.Block} containerBlock Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  saveConnections (containerBlock) {\n    let itemBlock = containerBlock.getInputTargetBlock('STACK')\n    let i = 0\n    while (itemBlock) {\n      const input = this.getInput('ADD' + i)\n      itemBlock.valueConnection_ = input && input.connection.targetConnection\n      i++\n      itemBlock = itemBlock.nextConnection && itemBlock.nextConnection.targetBlock()\n    }\n  },\n  /**\n   * Modify this block to have the correct number of inputs.\n   * @private\n   * @this {Blockly.Block}\n   */\n  updateShape_ () {\n    if (this.itemCount_ && this.getInput('EMPTY')) {\n      this.removeInput('EMPTY')\n    } else if (!this.itemCount_ && !this.getInput('EMPTY')) {\n      this.appendDummyInput('EMPTY')\n        .appendField(Blockly.Msg.LISTS_CREATE_EMPTY_TITLE)\n    }\n    // Add new inputs.\n    let i = 0\n    for (; i < this.itemCount_; i++) {\n      if (!this.getInput('ADD' + i)) {\n        const input = this.appendValueInput('ADD' + i)\n          .setAlign(Blockly.ALIGN_RIGHT)\n        if (i === 0) {\n          input.appendField(Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH)\n        }\n      }\n    }\n  },\n\n  onchange () {\n    // always have one empty slot\n    if (this.allInputsFilled()) {\n      this.itemCount_++\n      this.updateShape_()\n    }\n  }\n}\n","/**\n * Based on https://github.com/google/blockly-samples/tree/671586b1c0797779821bbf902f707ede97192b2b/codelabs/custom_renderer\n * Apache-2.0 - Copyright 2020 Google LLC\n */\n\nimport * as Blockly from 'blockly/core'\n\nfunction notch (params) {\n  const { width, height, peak } = Object.assign({ width: 4.5, height: 10, peak: 7 }, params)\n  return {\n    type: 2,\n    width: width * 2 + peak,\n    height: height,\n    pathLeft: ` l ${width},${height}  ${peak},0  ${width},-${height} `,\n    pathRight: ` l -${width},${height}  -${peak},0  -${width},-${height} `\n  }\n}\n\nconst notches = {\n  NONE: notch({ width: 4.5, height: 0, peak: 7 }),\n  NORMAL: notch({ width: 5.5, height: 10, peak: 2 }),\n  OBJECT: notch({ width: 0, height: 10, peak: 15 })\n}\n\nconst puzzles = {\n  LIST: puzzle({ width: 10, height: 20, peak: 10 }),\n  NORMAL: puzzle({ width: 8, height: 15, peak: 10 })\n}\n\nfunction puzzle (params) {\n  const { width, height, peak } = Object.assign({ width: 8, height: 15, peak: 10 }, params)\n  const half = height / 2\n  return {\n    type: 1,\n    width: width,\n    height: height,\n    pathDown: ` c 0,${peak}  -${width},-${width}  -${width},${half}  s ${width},-${peak - half}  ${width},${half} `,\n    pathUp: ` c 0,-${peak}  -${width},${width}  -${width},-${half}  s ${width},${peak - half}  ${width},-${half} `\n  }\n}\n\nfunction inputPuzzleFor (block) {\n  if (isDynamicBlock(block)) {\n    return puzzles.LIST\n  }\n  switch (block.type) {\n    case 'p:Pipeline':\n      return puzzles.LIST\n    default:\n      return puzzles.NORMAL\n  }\n}\n\nfunction outputPuzzleFor (block) {\n  if (isDynamicBlock(block)) {\n    return puzzles.LIST\n  }\n  switch (block.type) {\n    case 'p:Pipeline':\n    case 'plists_create_with':\n      return puzzles.LIST\n    default:\n      return puzzles.NORMAL\n  }\n}\n\nfunction inputNotchFor (block) {\n  if (block.type === 'p:Pipeline') {\n    return notches.NONE\n  }\n  if (block._pipeTypes.includes('p:Writable')) {\n    return notches.NORMAL\n  }\n  if (block._pipeTypes.includes('p:WritableObjectMode')) {\n    return notches.OBJECT\n  }\n  return notches.NONE\n}\n\nfunction outputNotchFor (block) {\n  if (block.type === 'p:Pipeline') {\n    return notches.NONE\n  }\n  if (block._pipeTypes.includes('p:Readable')) {\n    return notches.NORMAL\n  }\n  if (block._pipeTypes.includes('p:ReadableObjectMode')) {\n    return notches.OBJECT\n  }\n  return notches.NONE\n}\n\nfunction isDynamicBlock (block) {\n  return !!block?._dynamicBlock\n}\n\nclass CustomConstantsProvider extends Blockly.blockRendering.ConstantProvider {\n  shapeFor (connection) {\n    const isPipeline = connection.sourceBlock_.type === 'p:Pipeline'\n    const isGeneric = connection.sourceBlock_.type === 'node:generic'\n    const isDynamic = isDynamicBlock(connection.sourceBlock_)\n    const pipelineNotchOverStep = !connection.check_ && connection.sourceBlock_?.nextConnection?.check_?.includes('p:Pipeline')\n    if (pipelineNotchOverStep) {\n      return notches.NONE\n    }\n\n    switch (connection.type) {\n      case Blockly.INPUT_VALUE:\n        return inputPuzzleFor(connection.sourceBlock_)\n      case Blockly.OUTPUT_VALUE:\n        return outputPuzzleFor(connection.sourceBlock_)\n      case Blockly.PREVIOUS_STATEMENT:\n        if (connection.sourceBlock_) {\n          if (isDynamic) {\n            if (isGeneric && connection.targetConnection?.sourceBlock_) {\n              return outputNotchFor(connection.targetConnection.sourceBlock_)\n            }\n            return inputNotchFor(connection.sourceBlock_)\n          }\n          if (isPipeline) {\n            const children = connection.sourceBlock_?.childBlocks_\n            const lastChild = children[0]\n            if (children && isDynamicBlock(lastChild)) {\n              return inputNotchFor(lastChild)\n            }\n            return notches.NONE\n          }\n        }\n        return this.NOTCH\n      case Blockly.NEXT_STATEMENT:\n        if (connection.sourceBlock_) {\n          if (isDynamic) {\n            if (isGeneric && connection.targetConnection?.sourceBlock_) {\n              return inputNotchFor(connection.targetConnection.sourceBlock_)\n            }\n            return outputNotchFor(connection.sourceBlock_)\n          }\n          if (isPipeline) {\n            const children = connection.sourceBlock_.getChildren(true).filter(isDynamicBlock)\n            const lastChild = children[children.length - 1]\n            const lastDynamicBlock = isDynamicBlock(lastChild) ? lastChild : null\n            if (lastDynamicBlock) {\n              return outputNotchFor(lastDynamicBlock)\n            }\n            return notches.NONE\n          }\n        }\n        return this.NOTCH\n      default:\n        throw Error('Unknown type')\n    }\n  }\n};\n\nclass CustomRenderer extends Blockly.blockRendering.Renderer {\n  makeConstants_ () {\n    return new CustomConstantsProvider()\n  }\n};\n\nBlockly.blockRendering.register('custom_renderer', CustomRenderer)\n","import * as Blockly from 'blockly/core'\nimport clownface from 'clownface'\nimport dataset from 'rdf-dataset-indexed'\nimport namespace from '@rdfjs/namespace'\nimport { turtle } from '@tpluscode/rdf-string'\nimport { prefixes } from '@zazuko/rdf-vocabularies'\n\nconst prefix = {\n  schema: 'http://schema.org/',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  p: 'https://pipeline.described.at/',\n  code: 'https://code.described.at/'\n}\n\nconst ns = Object.entries(prefix).reduce((acc, [prefix, iri]) => {\n  acc[prefix] = namespace(iri)\n  return acc\n}, {})\n\nObject.entries(prefix).forEach(([prefix, iri]) => {\n  prefixes[prefix] = iri\n})\n\nexport default Blockly.B59 = new Blockly.Generator('B59')\n\nBlockly.B59.ORDER_ATOMIC = 0\nBlockly.B59.ORDER_FIRST_PASS = 10\nBlockly.B59.ORDER_SECOND_PASS = 20\nBlockly.B59.ORDER_NONE = 99\nBlockly.B59.RESERVED_WORDS_ = ''\n\nBlockly.B59.init = (workspace) => {\n  Blockly.B59.cf = clownface({ dataset: dataset() })\n\n  if (!Blockly.B59.variableDB_) {\n    Blockly.B59.variableDB_ = new Blockly.Names(Blockly.B59.RESERVED_WORDS_)\n  } else {\n    Blockly.B59.variableDB_.reset()\n  }\n\n  Blockly.B59.variableDB_.setVariableMap(workspace.getVariableMap())\n  Blockly.B59.defvars_ = Blockly.Variables.allUsedVarModels(workspace)\n}\nBlockly.B59.finish = (code) => {\n  return turtle`${Blockly.B59.cf.dataset}`.toString().replace(/ rdf:type /g, ' a ')\n}\n\nBlockly.B59['p:Pipeline'] = (block) => {\n  const pipelineIRI = block.getFieldValue('NAME')\n  const variablesPointer = Blockly.B59.cf.blankNode('variables')\n\n  Blockly.B59.cf.namedNode(pipelineIRI)\n    .addOut(ns.rdf.type, ns.p.Pipeline)\n    .addOut(ns.rdf.type, ns.p.Readable)\n    .addOut(ns.p.variables, variablesPointer)\n    .addOut(ns.p.steps, Blockly.B59.cf.namedNode(`${pipelineIRI}/steps`))\n\n  Blockly.B59.statementToCode(block, 'VARIABLES')\n  Blockly.B59.statementToCode(block, 'STEPLIST')\n  return ''\n}\n\nBlockly.B59.plists_create_with = (block) => {\n  for (let i = 0; i < block.itemCount_; i++) {\n    Blockly.B59.valueToCode(block, 'ADD' + i, Blockly.B59.ORDER_NONE)\n  }\n  return ''\n}\n\nBlockly.B59.variables_get_dynamic = (block) => {\n  return ''\n}\n\nBlockly.B59.variables_set_dynamic = (block) => {\n  const id = block.getFieldValue('VAR')\n\n  if (/b[0-9]+/.test(block.data)) {\n    const variable = Blockly.B59.variableDB_.variableMap_.variableMap_['p:Variable'].find(({ id_ }) => id_ === id)\n    variable.data = block.data\n    variable.value = block.getFieldValue('VALUE')\n\n    const var1 = Blockly.B59.cf.blankNode()\n      .addOut(ns.rdf.type, ns.p.Variable)\n      .addOut(ns.p.name, variable.name)\n      .addOut(ns.p.value, variable.value)\n    Blockly.B59.cf.blankNode('variables').addOut(ns.p.variable, var1)\n  } else if (block.data !== '@base') {\n    Blockly.B59.cf.blankNode('variables').addOut(ns.p.variable, Blockly.B59.cf.namedNode(block.data))\n\n    const definedVariable = Blockly.B59.defvars_.find(({ id_ }) => id_ === id)\n\n    Blockly.B59.cf.namedNode(block.data)\n      .addOut(ns.rdf.type, ns.p.Variable)\n      .addOut(ns.p.name, definedVariable.name)\n      .addOut(ns.p.value, block.getFieldValue('VALUE'))\n  }\n\n  const nextBlock = block.nextConnection && block.nextConnection.targetBlock()\n  Blockly.B59.blockToCode(nextBlock)\n  return ''\n}\n\nBlockly.B59['code:EcmaScript'] = (block) => {\n  const value = block.getFieldValue('ECMASCRIPTCODE')\n  return [value, Blockly.B59.ORDER_NONE]\n}\n","import Blockly from 'blockly'\nimport cf from 'clownface'\nimport formats from '@rdfjs/formats-common'\nimport namespace from '@rdfjs/namespace'\nimport rdf from 'rdf-ext'\nimport fetch from '@rdfjs/fetch-lite'\nimport stringToStream from 'string-to-stream'\nimport { create } from 'xmlbuilder2'\nconst parser = formats.parsers.get('text/turtle')\n\nconst ns = {\n  schema: namespace('http://schema.org/'),\n  rdf: namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n  p: namespace('https://pipeline.described.at/'),\n  code: namespace('https://code.described.at/')\n}\n\nexport async function findBase (str) {\n  const match = str.match(/^\\s*@base\\s+<([^>]+)>\\s*\\./mi)\n  if (match) {\n    return match[1]\n  }\n  return ''\n}\n\nexport async function turtleToCF (str) {\n  const stream = stringToStream(str)\n  const quadStream = parser.import(stream)\n  const graph = cf({ dataset: await rdf.dataset().import(quadStream) })\n  const base = await findBase(str)\n  if (!base) {\n    return graph\n  }\n  graph.namedNode(ns.p.parsedPipeline)\n    .addOut(ns.p.hasBase, base)\n  return graph\n}\n\nexport async function parseTurtle (code) {\n  const cf = await turtleToCF(code)\n  return turtleToXML(cf)\n}\n\nexport async function rdfFetch (url) {\n  return new Promise((resolve, reject) =>\n    fetch(url, { formats })\n      .then(res => resolve(res.quadStream()))\n      .catch(err => reject(err))\n  )\n}\n\nexport async function urlToCF (url) {\n  return cf({ dataset: await rdf.dataset().import(await rdfFetch(url)) })\n}\n\nfunction turtleToXML (graph) {\n  const baseQuad = graph.has(ns.p.hasBase)\n  const base = baseQuad.term ? baseQuad.out().value : ''\n\n  const doc = create().ele('https://developers.google.com/blockly/xml', 'xml')\n  const rootVarXML = doc.ele('variables')\n  let lastVariableSetBlock = doc\n  const definedVariableNames = new Set()\n\n  const pipelines = []\n  graph\n    .has(ns.rdf.type, ns.p.Pipeline)\n    .forEach(pipeline => {\n      pipelines.push(pipeline.value)\n      const pXML = doc\n        .ele('block', { type: 'p:Pipeline' })\n        .ele('field', { name: 'NAME' })\n        .txt(pipeline.value)\n        .up()\n\n      const variables = pipeline\n        .out(ns.p.variables)\n        .out()\n        .filter(variable => variable.has(ns.rdf.type, ns.p.Variable))\n        .map(variable => ({\n          iri: variable.term.value,\n          name: variable.out(ns.p.name).value,\n          value: variable.out(ns.p.value).value\n        }))\n\n      if (base) {\n        variables.push({\n          iri: '@base',\n          name: '@base',\n          value: base\n        })\n      }\n\n      const vXML = pXML\n        .ele('value', { name: 'VARIABLES' })\n        .ele('block', { type: 'plists_create_with' })\n        .ele('mutation', { items: `${variables.length}` })\n        .up()\n\n      variables\n        .forEach((variable, index) => {\n          // make sure each variable is only defined once\n          if (definedVariableNames.has(variable.name)) {\n            return\n          }\n          definedVariableNames.add(variable.name)\n\n          rootVarXML.ele('variable', { type: 'p:Variable' }).txt(variable.name)\n          lastVariableSetBlock = lastVariableSetBlock.ele('block', { type: 'variables_set_dynamic' })\n            .ele('field', { name: 'VAR', variableType: 'p:Variable' }).txt(variable.name)\n            .up()\n            .ele('field', { name: 'VALUE' }).txt(variable.value)\n            .up()\n            .ele('data').txt(variable.iri)\n            .up()\n            .ele('next')\n\n          if (variable.name !== '@base') {\n            vXML\n              .ele('value', { name: `ADD${index}` })\n              .ele('block', { type: 'variables_get_dynamic' })\n              .ele('field', { name: 'VAR', variabletype: 'p:Variable' })\n              .txt(variable.name)\n          }\n        })\n\n      const steps = Array.from(pipeline\n        .out(ns.p.steps)\n        .out(ns.p.stepList)\n        .list())\n\n      let sXML = pXML.ele('statement', { name: 'STEPLIST' })\n      steps\n        .forEach((step, index, { length: lastIndex }) => {\n          const implementedBy = step.out(ns.code.implementedBy)\n          const codeLink = implementedBy.out(ns.code.link)\n          const args = Array.from(step.out(ns.code.arguments).toArray())\n\n          let dynamicBlockType = codeLink.term.value\n          const isGeneric = !Blockly.Blocks[dynamicBlockType]\n          const stepName = step.term.value\n\n          // step does not have manifest definition\n          if (isGeneric) {\n            dynamicBlockType = 'node:generic'\n          }\n\n          sXML = sXML\n            .ele('block', { type: dynamicBlockType })\n            .ele('field', { name: 'NAME' })\n            .txt(stepName)\n            .up()\n          if (isGeneric) {\n            sXML = sXML\n              .ele('field', { name: 'OPERATION' })\n              .txt(codeLink.term.value)\n              .up()\n          }\n\n          const argsContent = args\n            .map((arg) => {\n              if (arg?.term?.termType === 'BlankNode') {\n                [arg] = arg.out().terms\n              }\n              arg = arg.term || arg\n              const datatype = arg.datatype\n              if (!datatype) {\n                return\n              }\n              if (datatype.equals(ns.p.VariableName)) {\n                const block = { type: 'variables_get_dynamic' }\n                const field = { name: 'VAR', variabletype: 'p:Variable' }\n                const val = arg.value\n                return { block, field, val }\n              }\n              if (datatype.equals(ns.code.EcmaScript)) {\n                const block = { type: 'code:EcmaScript' }\n                const field = { name: 'ECMASCRIPTCODE' }\n                const val = arg.value\n                return { block, field, val }\n              }\n              if (datatype.equals(ns.code.EcmaScriptTemplateLiteral)) {\n                const block = { type: 'code:EcmaScriptTemplateLiteral' }\n                const field = { name: 'ECMASCRIPTCODE' }\n                const val = arg.value\n                return { block, field, val }\n              }\n            }).filter(Boolean)\n\n          if (argsContent.length) {\n            const argsList = sXML\n              .ele('value', { name: 'ARGUMENTS' })\n              .ele('block', { type: 'plists_create_with' })\n              .ele('mutation', { items: `${argsContent.length}` })\n              .up()\n\n            argsContent.forEach(({ block, field, val }, i) => {\n              argsList\n                .ele('value', { name: `ADD${i}` })\n                .ele('block', block)\n                .ele('field', field)\n                .txt(val)\n            })\n          }\n\n          if (index < lastIndex - 1) {\n            sXML = sXML.ele('next')\n          }\n        })\n    })\n  return [doc, pipelines]\n}\n","import namespace from '@rdfjs/namespace'\nimport { urlToCF } from '../utils/utils'\nimport * as Blockly from 'blockly/core'\n\nconst manifestsFiles = [\n  'manifest-generic.ttl',\n  'manifest-barnard59-base.ttl',\n  'manifest-barnard59-core.ttl',\n  'manifest-barnard59-csvw.ttl',\n  'manifest-barnard59-formats.ttl',\n  'manifest-barnard59-ftp.ttl',\n  'manifest-barnard59-graph-store.ttl',\n  'manifest-barnard59-http.ttl',\n  'manifest-barnard59-rdf.ttl',\n  'manifest-barnard59-shell.ttl',\n  'manifest-barnard59-sparql.ttl'\n]\n\nconst ns = {\n  schema: namespace('http://schema.org/'),\n  rdf: namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n  rdfs: namespace('http://www.w3.org/2000/01/rdf-schema#'),\n  p: namespace('https://pipeline.described.at/'),\n  code: namespace('https://code.described.at/')\n}\n\nexport async function init () {\n  let manifests = await Promise.all(\n    manifestsFiles.map((file) => urlToCF(`./manifests/${file}`))\n  )\n  manifests = manifests.map((cf, i) => {\n    const lib = manifestsFiles[i].split('-').slice(1).join('-').split('.')[0]\n    return [lib, cf]\n  })\n\n  return manifests.map(([lib, cf], i) => {\n    return cf\n      .has(ns.rdf.type, ns.p.Operation)\n      .map(operation => {\n        const label = operation.out(ns.rdfs.label).term.value\n\n        const implementedBy = operation.out(ns.code.implementedBy)\n        const codeLink = implementedBy.out(ns.code.link)\n        const blockName = codeLink.term.value\n\n        Blockly.Blocks[blockName] = {\n          init () {\n            this._dynamicBlock = true\n            this._pipeTypes = ['p:Step']\n\n            if (blockName === 'node:generic') {\n              this.appendDummyInput()\n                .appendField(`${label}`)\n              this.appendDummyInput()\n                .appendField('Operation')\n                .appendField(new Blockly.FieldTextInput('Operation'), 'OPERATION')\n            } else {\n              this.appendDummyInput()\n                .appendField(`${label} (${lib})`)\n            }\n\n            this.appendDummyInput()\n              .appendField('Step')\n              .appendField(new Blockly.FieldTextInput('Name'), 'NAME')\n\n            this.appendValueInput('ARGUMENTS')\n              .appendField('Arguments')\n              .setCheck(['p:Variable', 'code:EcmaScript', 'code:EcmaScriptTemplateLiteral', 'Array'])\n\n            this.setColour((185 + i * 30) % 360)\n            this.setTooltip(operation.out(ns.rdfs.comment).term.value)\n            this.setHelpUrl(operation.term.value)\n\n            const isReadable = operation.has(ns.rdf.type, ns.p.Readable).values.length\n            const isWritable = operation.has(ns.rdf.type, ns.p.Writable).values.length\n            const isReadableObjectMode = operation.has(ns.rdf.type, ns.p.ReadableObjectMode).values.length\n            const isWritableObjectMode = operation.has(ns.rdf.type, ns.p.WritableObjectMode).values.length\n\n            const previousStatement = []\n            if (isWritable) {\n              previousStatement.push('p:Readable')\n              this._pipeTypes.push('p:Writable')\n            }\n            if (isWritableObjectMode) {\n              previousStatement.push('p:ReadableObjectMode')\n              this._pipeTypes.push('p:WritableObjectMode')\n            }\n            this.setPreviousStatement(true, previousStatement)\n\n            const nextStatement = []\n            if (isReadable) {\n              nextStatement.push('p:Writable')\n              this._pipeTypes.push('p:Readable')\n            }\n            if (isReadableObjectMode) {\n              nextStatement.push('p:WritableObjectMode')\n              this._pipeTypes.push('p:ReadableObjectMode')\n            }\n\n            if (nextStatement.length) {\n              this.setNextStatement(true, nextStatement)\n            }\n          }\n        }\n\n        Blockly.B59[blockName] = stepTemplate(blockName)\n\n        return `\n          <block type=\"${blockName}\">\n            <field name=\"NAME\"></field>\n          </block>\n        `\n      }).join('\\n')\n  }).join('\\n')\n}\n\nconst stepTemplate = (blockName) => (block) => {\n  const name = block.getFieldValue('NAME')\n\n  const implementedBy = Blockly.B59.cf.blankNode()\n    .addOut(ns.code.link, Blockly.B59.cf.namedNode(blockName))\n    .addOut(ns.rdf.type, ns.code.EcmaScript)\n\n  const step = Blockly.B59.cf.namedNode(name)\n    .addOut(ns.rdf.type, ns.p.Step)\n    .addOut(ns.code.implementedBy, implementedBy)\n\n  if (Blockly.B59.valueToCode(block, 'ARGUMENTS', Blockly.B59.ORDER_NONE)) {\n    step.addList(ns.code.arguments, [\n      Blockly.B59.cf.literal(Blockly.B59.valueToCode(block, 'ARGUMENTS', Blockly.B59.ORDER_NONE))\n    ])\n  }\n\n  const nextBlock = block.nextConnection && block.nextConnection.targetBlock()\n  Blockly.B59.blockToCode(nextBlock)\n  return ''\n}\n","<template>\n  <div id=\"app\">\n    <blockly-component\n      v-if=\"options.toolbox\"\n      id=\"blockly-workspace\"\n      :options=\"options\"\n      ref=\"main\" />\n    <div id=\"code\">\n      <div id=\"buttons\">\n        <button @click=\"showCode()\">Blocks → Turtle</button>\n        <button @click=\"toXML()\">Blocks → XML</button>\n        <button @click=\"fromXML()\" v-show=\"codeType === 'xml'\">XML → Blocks</button>\n        <button @click=\"parseTurtle()\" v-show=\"codeType === 'ttl'\">Turtle → Blocks</button>\n        <select v-model=\"selectedPipeline\">\n          <option value=\"\">All pipelines</option>\n          <option v-for=\"pipeline in pipelines\" :key=\"pipeline\">\n            {{ pipeline }}\n          </option>\n        </select>\n        <span v-show=\"selectedPipeline\">Showing only: {{ selectedPipeline }}</span>\n      </div>\n      <textarea v-model=\"code\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-useless-escape */\nimport './style.css'\nimport BlocklyComponent from './components/BlocklyComponent.vue'\nimport './blocks/b59'\nimport './blocks/lists'\nimport './renderer'\n\nimport Blockly from 'blockly'\nimport BlocklyB59 from './utils/generator'\nimport { TypedVariableModal } from '@blockly/plugin-typed-variable-modal'\nimport { init } from './blocks/dynamic-blocks'\nimport { parseTurtle } from './utils/utils'\n\nconst createFlyout = (workspace) => {\n  let xmlList = []\n  const button = document.createElement('button')\n  button.setAttribute('text', 'Create Typed Variable')\n  button.setAttribute('callbackKey', 'callbackName')\n\n  xmlList.push(button)\n\n  const blockList = Blockly.VariablesDynamic.flyoutCategoryBlocks(workspace)\n  xmlList = xmlList.concat(blockList)\n  return xmlList\n}\n\nconst toolbox = (stepsXML) => `\n<xml>\n  <category name=\"Pipeline\" colour=\"%{BKY_LOOPS_HUE}\">\n    <block type=\"p:Pipeline\">\n      <field name=\"NAME\">my-pipeline</field>\n    </block>\n    <block type=\"code:EcmaScript\">\n      <field name=\"ECMASCRIPTCODE\">(x) => x * 2</field>\n    </block>\n    <block type=\"code:EcmaScriptTemplateLiteral\">\n      <field name=\"ECMASCRIPTCODE\">Date is \\${new Date().toISOString()}</field>\n    </block>\n  </category>\n  <category name=\"Steps\" colour=\"%{BKY_LOOPS_HUE}\">\n    ${stepsXML}\n  </category>\n  <category name=\"Lists\">\n    <block type=\"plists_create_with\"></block>\n  </category>\n  <category name=\"Variables\" custom=\"CREATE_TYPED_VARIABLE\" colour=\"%{BKY_VARIABLES_HUE}\"></category>\n</xml>\n`\n\nexport default {\n  name: 'app',\n  components: {\n    BlocklyComponent\n  },\n  async mounted () {\n    const stepsXML = await init()\n    this.options.toolbox = toolbox(stepsXML)\n    setTimeout(() => {\n      const workspace = this.$refs.main.workspace\n      workspace.registerToolboxCategoryCallback('CREATE_TYPED_VARIABLE', createFlyout)\n      const typedVarModal = new TypedVariableModal(workspace, 'callbackName', [['p:Variable', 'p:Variable'], ['p:Variable', 'p:Variable']])\n      typedVarModal.init()\n      this.parseTurtle()\n    }, 400)\n  },\n  data () {\n    return {\n      pipelines: [],\n      selectedPipeline: '',\n      hiddenPipelines: [],\n      code: '',\n      codeType: 'ttl',\n      options: {\n        media: 'media/',\n        grid:\n          {\n            spacing: 25,\n            length: 3,\n            colour: '#ccc',\n            snap: true\n          },\n        toolbox: '',\n        renderer: 'custom_renderer'\n      }\n    }\n  },\n  watch: {\n    selectedPipeline (val, oldVal) {\n      const serializer = new XMLSerializer()\n      // workspace to xml to string\n      const xmlDom = Blockly.Xml.workspaceToDom(this.$refs.main.workspace)\n      if (val !== oldVal) {\n        for (const p of this.hiddenPipelines) {\n          xmlDom.appendChild(p)\n        }\n        this.hiddenPipelines = []\n      }\n      const pipelines = xmlDom.querySelectorAll('block[type=\"p:Pipeline\"]')\n      if (val) {\n        for (const p of pipelines) {\n          const name = p.querySelector('field[name=\"NAME\"]')\n          if (name && name.innerHTML !== val) {\n            // save the hidden pipelines to be able to add them again\n            this.hiddenPipelines.push(p)\n            p.remove()\n          }\n        }\n      }\n\n      const xmlStr = serializer.serializeToString(xmlDom)\n\n      const dom2 = Blockly.Xml.textToDom(xmlStr)\n      Blockly.mainWorkspace.clear()\n      Blockly.Xml.domToWorkspace(dom2, this.$refs.main.workspace)\n    }\n  },\n  methods: {\n    showCode () {\n      this.code = BlocklyB59.workspaceToCode(this.$refs.main.workspace)\n      this.codeType = 'ttl'\n    },\n    toXML () {\n      const xmlDom = Blockly.Xml.workspaceToDom(this.$refs.main.workspace)\n      const xml = Blockly.Xml.domToPrettyText(xmlDom)\n      this.code = xml\n      this.codeType = 'xml'\n    },\n    fromXML (xml) {\n      try {\n        const dom = Blockly.Xml.textToDom(xml || this.code)\n        Blockly.mainWorkspace.clear()\n        Blockly.Xml.domToWorkspace(dom, this.$refs.main.workspace)\n        return true\n      } catch (e) {\n        console.error('XML parsing failed')\n        console.error(e)\n        return false\n      }\n    },\n    async parseTurtle () {\n      const [xml, pipelines] = await parseTurtle(this.code)\n      this.pipelines = pipelines\n      const strXML = xml.end({ prettyPrint: true })\n      // console.log(strXML.replace(/ id=\"[^\"]*\"/g, ''))\n\n      const dom = Blockly.Xml.textToDom(strXML)\n      Blockly.mainWorkspace.clear()\n      Blockly.Xml.domToWorkspace(dom, this.$refs.main.workspace)\n    }\n  }\n}\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=30a07443&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n// Add unimported components to ignore list to prevent warnings.\nVue.config.ignoredElements = ['field', 'block', 'category', 'xml', 'mutation', 'value', 'sep']\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}